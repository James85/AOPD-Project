package rmit.ai.clima.jackagt.plans;
import rmit.ai.clima.jackagt.events.*;
import rmit.ai.clima.jackagt.data.*;

public plan PSendPlayerToDepot extends Plan
{
/******** Start PDT Design Block *** DO NOT EDIT IT *********/

/*
Plan Name: PSendPlayerToDepot
*/
	//Events handled by the plan are declared here.
	#posts event MEPlayerAction meplayeraction_p;

	#posts event EFindPath efindpath_p;

	#handles event EPostPlayerAction epostplayeraction_h;


	// Declarations of any beliefset/data that the plan accesses.
	#reads data BPlayerPosition bel_playerPositions_dat;

	#reads data BPathCache bel_moveHint_dat;

	#reads data BPlayerGold bel_playerGold_dat;

	#reads data SimulationProp bel_simulationProp_dat;

/******** End PDT Design Block *** DO NOT EDIT IT *********/
	logical int $playerX, $playerY, $depotX, $depotY, $numGold;
	context()
	{
	   bel_playerPositions_dat.getByName( epostplayeraction_h.playerName, $playerX, $playerY ) 
      && bel_simulationProp_dat.getDepotLoc( $depotX, $depotY ) 
      && bel_playerGold_dat.getByName( epostplayeraction_h.playerName, $numGold )
      && $numGold.as_int() >= 1;
	}

	body()
	{
	   //System.out.print("TRYYYYYYYING TO DEPOT!!!!!");
	   @subtask(efindpath_p.post( epostplayeraction_h.playerName, $playerX.as_int(), $playerY.as_int(), $depotX.as_int(), $depotY.as_int() ));
      logical String $move;

      //if (bel_moveHint_dat.getByEndPoints($playerX.as_int(), $playerY.as_int(), $depotX.as_int(), $depotY.as_int(), $move ))
      {
         String baseName = epostplayeraction_h.playerName;
         baseName = baseName.substring(0,baseName.indexOf("@"));
        // @send( baseName, meplayeraction_s.send( "moveTo", $move.as_string() ));
         
      }
	}
   public PlanInstanceInfo getInstanceInfo()
   {
      return PlanInstanceInfo.def[8];
   }
}
