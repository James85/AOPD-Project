package rmit.ai.clima.jackagt.plans;
import rmit.ai.clima.jackagt.events.*;
import rmit.ai.clima.jackagt.data.*;
import rmit.ai.clima.gui.grid.*;
import java.util.*;

public plan PIdentifyExploreTarget extends Plan
{
   /******** Start PDT Design Block *** DO NOT EDIT IT *********/

/*
Plan Name: PIdentifyExploreTarget
*/
	//Events handled by the plan are declared here.
	#posts event EFindPath efindpath_p;

	#handles event EIdentifyTarget eidentifytarget_h;


	// Declarations of any beliefset/data that the plan accesses.
	#modifies data BPlayerPosition bel_playerTarget_dat;

	#reads data BObstacleAt bel_obstacleAt_dat;

	#reads data BUnexplored bel_unexplored_dat;

	#reads data SimulationProp bel_simulationProp_dat;

	#reads data BPlayerPosition bel_playerPositions_dat;

	#reads data BPathCache bel_moveHint_dat;

/******** End PDT Design Block *** DO NOT EDIT IT *********/

   context()
   {
      true;
   }
   #reasoning method fail()
   {
       System.out.println("OMGZORS ===========DickZilla : PIdentifyExploreTarget");
   }
   body()
   {
      //Get grid dimensions
      logical int $width, $height;
      bel_simulationProp_dat.getGridSize( $width, $height );
      
      //Get player location
      logical int $playerX, $playerY;
      bel_playerPositions_dat.getByName( eidentifytarget_h.playerName, $playerX, $playerY );
      
      boolean[] visited = new boolean[ $width.as_int() * $height.as_int() ];
      for (int i=0; i < $width.as_int() * $height.as_int(); ++i)
         visited[i] = false;
     
      //Try to find a new target
      boolean targetFound = false;
      boolean targetUnreachable = false;
      System.out.println("FINDING A NEW UNEXPLORED AREA TO GO TO");
      while(!targetFound && !targetUnreachable)
      {
         //Pick a random location to start from
         Random rand = new Random();
         int r = rand.nextInt( $width.as_int() * $height.as_int() );
//         System.out.println("RANDOM NUMBER WAS: "+ r);
         targetUnreachable = false;
         
         //Loop until back at the random point
         int i = r+1;
         while(i != r)
         {
            
            int x = i % $width.as_int();
            int y = (i - x) / $width.as_int();
   
            //Check if cell unexplored and not yet visited
            if(bel_unexplored_dat.check(x,y) && visited[i] == false)
            {
               //Check if cell reachable
               EFindPath pathRequest = efindpath_p.post( eidentifytarget_h.playerName, $playerX.as_int(), $playerY.as_int(), x, y ); 
               @subtask( pathRequest );
               if (pathRequest.reachable)
               {
                  //Store the player target
//                  System.out.println("I AM GOING TO EXPLORE " + x + ", " + y);
                  bel_playerTarget_dat.add( eidentifytarget_h.playerName, x, y);
                  targetFound = true;
                  break;
               }
               
               //Mark as visited
               visited[i] = true;
               targetUnreachable = true;
               break;
            }
   
            //Loop around to start if end of array reached 
            if (++i == $width.as_int() * $height.as_int() ) i = 0;
         }
      }
   }
}
