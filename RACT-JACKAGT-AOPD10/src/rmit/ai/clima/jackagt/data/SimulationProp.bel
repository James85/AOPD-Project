package rmit.ai.clima.jackagt.data;

//modify
import rmit.ai.clima.gui.grid.GridPoint;

public beliefset SimulationProp extends ClosedWorld /*or OpenWorld*/
{
/******** Start PDT Design Block *** DO NOT EDIT IT *********/
/*
 * Beliefset Name: SimulationProp
 */

	// Zero or more #key field declarations.
	// These describe the key attributes of each belief.


	// Zero of more #value field declarations.
	// These describe the data attributes of each belief.
	#value field int gridX;

	#value field int gridY;

	#value field int depotX;

	#value field int depotY;

	#value field int noSteps;

	#value field int numStepsLeft;

/******** End PDT Design Block *** DO NOT EDIT IT *********/
   // Zero or more #key field declarations.
   // These describe the key attributes of each belief.
   // Zero of more #value field declarations.
   // These describe the data attributes of each belief.
   
    
	#indexed query get(logical int gridX, logical int gridY, logical int depotX, logical int depotY, logical int noSteps, logical int numStepsLeft);
	#indexed query check(int gridX, int gridY, int depotX, int depotY, int noSteps, int numStepsLeft);

	#complex query getDepotLoc(logical int $depotX, logical int $depotY) {
		logical int $gridX, $gridY, $noSteps, $numStepsLeft;
		
		return get($gridX, $gridY, $depotX, $depotY, $noSteps, $numStepsLeft); 
	}
	
	#function query public int getNumStepsLeft()
	{
	   logical int $gridX, $gridY, $depotX, $depotY, $noSteps, $numStepsLeft;
	   get( $gridX, $gridY, $depotX, $depotY, $noSteps, $numStepsLeft ).next();
	   return $numStepsLeft.as_int();
	}


	#complex query getGridSize(logical int $gridX, logical int $gridY) {
		logical int $depotX, $depotY, $noSteps, $numStepsLeft;
		
		return get($gridX, $gridY, $depotX, $depotY, $noSteps, $numStepsLeft); 
	}



}
