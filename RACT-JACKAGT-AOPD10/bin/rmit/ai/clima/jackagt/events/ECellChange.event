package rmit.ai.clima.jackagt.events;

import rmit.ai.clima.jackagt.data.*;
import rmit.ai.clima.gui.grid.*;
import rmit.ai.clima.gui.graphic.*;


/******** Start PDT Design Block *** DO NOT EDIT IT *********/
public event ECellChange extends BDIGoalEvent
{
/*
 * Message Name: ECellChange
 * Covered: true
 * Overlap: true
*/
	#uses data BGoldAt bel_goldAt_dat;

	#uses data BObstacleAt bel_obstacleAt_dat;

/******** End PDT Design Block *** DO NOT EDIT IT *********/

	#set transport java;
	 
	public String message;
	public GridObject gridObject;



	logical int $x, $y, $id;
	        
	   #posted as goldRemoved(int x,int y)
	   {
		   this.gridObject = new GridObject(x,y, "nogold");  
	   }   
	   
	#posted when (bel_goldAt_dat.get($x, $y))
	{
		// Cell has a gold
		gridObject = new GridObject($x.as_int(),$y.as_int(),GameGraphics.getGoldString());
		message = "Just learned of gold at " +GridPoint.toString($x.as_int(),$y.as_int());
	}
	#posted when (!bel_goldAt_dat.get($x, $y))
	{
		// Cell has no gold
		
		gridObject = new GridObject($x.as_int(), $y.as_int(), "nogold");
		message = "Just learned no gold at " + GridPoint.toString($x.as_int(),$y.as_int());
	}
	   
	
   // Cell does not have an obstacle
   #posted when (!bel_obstacleAt_dat.get($x,$y)) {

	  gridObject = new GridObject($x.as_int(),$y.as_int(), GameGraphics.getEmptyString());
	  
	  message = "Just learned of an empty cell at location " + GridPoint.toString($x.as_int(),$y.as_int()); 
   }


   // Cell has an obstacle
   #posted when (bel_obstacleAt_dat.get($x, $y)){

	  gridObject = new GridObject($x.as_int(),$y.as_int(), GameGraphics.getObstacleString());

	  message = "Just learned of an obstacle at location " + GridPoint.toString($x.as_int(),$y.as_int());
   }


   
}
