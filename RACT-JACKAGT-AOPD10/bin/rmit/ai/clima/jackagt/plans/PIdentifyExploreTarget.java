/*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
  This code is generated by JAC version 5.4 by
  Agent Oriented Software. http://www.agent-software.com.au

    DO NOT ALTER THIS CODE AND DO NOT REMOVE THIS COMMENT
 *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*/
package rmit.ai.clima.jackagt.plans;
import aos.jack.jak.plan.Plan;
import aos.jack.jak.plan.PlanFSM;
import aos.jack.jak.plan.ExMap;
import aos.jack.jak.agent.NameSpace;
import aos.jack.jak.agent.Agent;
import aos.jack.jak.event.Event;
import aos.jack.jak.task.Task;
import aos.jack.jak.core.Generator;
import aos.jack.jak.logic.Signature;
import rmit.ai.clima.jackagt.events.EIdentifyTarget;
import rmit.ai.clima.jackagt.data.BPlayerPosition;
import rmit.ai.clima.jackagt.data.SimulationProp;
import rmit.ai.clima.jackagt.data.BObstacleAt;
import java.util.Random;
import java.lang.Object;
import aos.jack.jak.cursor.Cursor;
import aos.jack.jak.fsm.FSM;
import aos.jack.jak.core.Jak;

public class PIdentifyExploreTarget extends aos.jack.jak.plan.Plan {
    public rmit.ai.clima.jackagt.events.EIdentifyTarget eidentifytarget_h;
    public rmit.ai.clima.jackagt.data.BPlayerPosition bel_playerTarget_dat;
    public rmit.ai.clima.jackagt.data.SimulationProp bel_simulationProp_dat;
    public rmit.ai.clima.jackagt.data.BObstacleAt bel_obstacleAt_dat;
    private static aos.jack.jak.plan.ExMap[] __exMap_body;
    private static java.lang.String[] __tt__body = {
            "rmit/ai/clima/jackagt/plans/PIdentifyExploreTarget.plan",
            "body",
            "34",
            "35",
            "37",
            "38",
            "39",
            "42",
            "43",
            "45",
            "46",
            "49",
            "52",
            "53",
            "54",
            "58",
            "58",
            "32"};
    private final static java.lang.String[] __planVariableNames = {
            "eidentifytarget_h",
            "bel_playerTarget_dat",
            "bel_simulationProp_dat",
            "bel_obstacleAt_dat"};
    private final static java.lang.String[] __planVariableTypes = {
            "rmit.ai.clima.jackagt.events.EIdentifyTarget",
            "rmit.ai.clima.jackagt.data.BPlayerPosition",
            "rmit.ai.clima.jackagt.data.SimulationProp",
            "rmit.ai.clima.jackagt.data.BObstacleAt"};
    private final static java.lang.String[] __reasoningMethods = {
            "body"};
    private final static java.lang.String[] __fsmVariableNames_body = {
            "$width",
            "$height",
            "rand",
            "r",
            "i",
            "x",
            "y"};
    private final static java.lang.String[] __fsmTypes_body = {
            "logical int",
            "logical int",
            "Random",
            "int",
            "int",
            "int",
            "int"};
    private final static java.lang.String[] __fsmLocalNames_body = {
            "__local__21_0",
            "__local__21_1",
            "__local__21_2",
            "__local__21_3",
            "__local__21_4",
            "__local__21_5",
            "__local__21_6"};
    public PIdentifyExploreTarget()
    {
    }
    
    private PIdentifyExploreTarget(aos.jack.jak.task.Task __t, rmit.ai.clima.jackagt.plans.PIdentifyExploreTarget __env)
    {
        __agent = __env.__agent;
        __ns = __env.__ns;
        __planTask = __t;
        __logic = __t.logic;
        eidentifytarget_h = __env.eidentifytarget_h;
        bel_playerTarget_dat = __env.bel_playerTarget_dat;
        bel_simulationProp_dat = __env.bel_simulationProp_dat;
        bel_obstacleAt_dat = __env.bel_obstacleAt_dat;
    }
    
    public boolean init_sentinel(aos.jack.jak.agent.NameSpace __a)
    {
        eidentifytarget_h = (rmit.ai.clima.jackagt.events.EIdentifyTarget) __a.findEvent("rmit.ai.clima.jackagt.events.EIdentifyTarget");
        if (eidentifytarget_h == null) {
            warning("Failed to find EIdentifyTarget eidentifytarget_h");
            return false;
        }
        bel_playerTarget_dat = (rmit.ai.clima.jackagt.data.BPlayerPosition) lookupNamedObject("bel_playerTarget_dat","rmit.ai.clima.jackagt.data.BPlayerPosition",aos.jack.jak.agent.Agent.WRITEABLE);
        if (bel_playerTarget_dat == null) {
            warning("Failed to find BPlayerPosition bel_playerTarget_dat");
            return false;
        }
        bel_simulationProp_dat = (rmit.ai.clima.jackagt.data.SimulationProp) lookupNamedObject("bel_simulationProp_dat","rmit.ai.clima.jackagt.data.SimulationProp",0);
        if (bel_simulationProp_dat == null) {
            warning("Failed to find SimulationProp bel_simulationProp_dat");
            return false;
        }
        bel_obstacleAt_dat = (rmit.ai.clima.jackagt.data.BObstacleAt) lookupNamedObject("bel_obstacleAt_dat","rmit.ai.clima.jackagt.data.BObstacleAt",0);
        if (bel_obstacleAt_dat == null) {
            warning("Failed to find BObstacleAt bel_obstacleAt_dat");
            return false;
        }
        return true;
    }
    
    public aos.jack.jak.plan.Plan freeze()
    {
        return this;
    }
    
    public aos.jack.jak.plan.Plan unfreeze()
    {
        return this;
    }
    
    public java.lang.Object genObject(int __index)
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal Object Construction");
        return null;
    }
    
    public aos.jack.jak.cursor.Cursor genCursor(int __index)
        throws java.lang.Exception
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal Cursor Construction");
        return null;
    }
    
    public aos.jack.jak.fsm.FSM genFSM(int __index)
        throws java.lang.Exception
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal FSM Construction");
        return null;
    }
    
    public boolean testCondition(int __index)
        throws java.lang.Exception
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal test Construction");
        return false;
    }
    
    public aos.jack.jak.plan.PlanFSM body()
    {
        return new rmit.ai.clima.jackagt.plans.PIdentifyExploreTarget.__bodyFSM();
    }
    
    private PIdentifyExploreTarget(rmit.ai.clima.jackagt.events.EIdentifyTarget __ev, aos.jack.jak.task.Task __t, rmit.ai.clima.jackagt.plans.PIdentifyExploreTarget __env)
    {
        this(__t,__env);
        this.eidentifytarget_h = __ev;
    }
    
    protected aos.jack.jak.logic.Signature eventSignature(int __log)
    {
        return eidentifytarget_h.getSignature(__log);
    }
    
    public java.lang.String handledEvent()
    {
        return "rmit.ai.clima.jackagt.events.EIdentifyTarget";
    }
    
    public boolean __relevant(aos.jack.jak.event.Event __e)
    {
        return __ns.isEnabled();
    }
    
    public aos.jack.jak.plan.Plan createPlan(aos.jack.jak.event.Event __e, aos.jack.jak.task.Task __t)
    {
        if (!(__e instanceof rmit.ai.clima.jackagt.events.EIdentifyTarget)) 
            return null;
        rmit.ai.clima.jackagt.events.EIdentifyTarget __e1 = (rmit.ai.clima.jackagt.events.EIdentifyTarget) __e;
        return new rmit.ai.clima.jackagt.plans.PIdentifyExploreTarget(__e1,__t,this);
    }
    
    public java.lang.String[] variableNames()
    {
        return __planVariableNames;
    }
    
    public java.lang.String[] variableTypes()
    {
        return __planVariableTypes;
    }
    
    public java.lang.Object getVariable(int n)
    {
        switch (n) {
            case 0: 
            {
                return aos.util.ToObject.box(eidentifytarget_h);
            }
            case 1: 
            {
                return aos.util.ToObject.box(bel_playerTarget_dat);
            }
            case 2: 
            {
                return aos.util.ToObject.box(bel_simulationProp_dat);
            }
            case 3: 
            {
                return aos.util.ToObject.box(bel_obstacleAt_dat);
            }
            default: 
            {
                throw new java.lang.IndexOutOfBoundsException("Plan " + this + " does not have variable number " + n);
            }
        }
    }
    
    public java.lang.String[] reasoningMethods()
    {
        return mergeReasoningMethods(__reasoningMethods,super.reasoningMethods());
    }
    
    public aos.jack.jak.cursor.Cursor context()
    {
        try {
            return (((true)?aos.jack.jak.cursor.Cursor.trueCursor:aos.jack.jak.cursor.Cursor.falseCursor));
        }
        catch (java.lang.Exception e) {
            e.printStackTrace();
            return aos.jack.jak.cursor.Cursor.falseCursor;
        }
    }
    
    class __bodyFSM extends aos.jack.jak.plan.PlanFSM implements aos.jack.jak.core.Generator {
        aos.jack.jak.logic.IntegerVariable __local__21_0;
        aos.jack.jak.logic.IntegerVariable __local__21_1;
        java.util.Random __local__21_2;
        int __local__21_3;
        int __local__21_4;
        int __local__21_5;
        int __local__21_6;
        private int __breakLevel = 0;
        public int run(int __status)
            throws java.lang.Throwable
        {
            do {
                try {
                    if (__tothrow != null) 
                        throw __tothrow;
                    if ((aos.jack.jak.core.Jak.debugging & aos.jack.jak.core.Jak.LOG_PLANS) != 0) 
                        aos.util.logging.LogMsg.log(this,aos.jack.jak.core.Jak.LOG_PLANS,__task + "-PIdentifyExploreTarget.body:" + java.lang.Integer.toString(__state));
                    if (__task.nsteps > 0) {
                        __task.nsteps-- ;
                        if (__task.nsteps == 0) 
                            agent.changeFocus();
                    }
                    if (__state < 10) {
                        __status = super.stdrun(rmit.ai.clima.jackagt.plans.PIdentifyExploreTarget.this,__status);
                        if (__status != CONTINUE || agent.changing_focus) 
                            return __status;
                        continue;
                    }
                    __curstate = __state;
                    switch (__state) {
                        default: 
                        {
                            aos.jack.jak.core.Jak.error("PIdentifyExploreTarget.body: Illegal state");
                            return FAILED_STATE;
                        }
                        //* (34)       logical int $width, $height;
                        case 10: 
                        {
                            __breakLevel = 0;
                            __local__21_0 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__21_1 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 11;
                            break;
                        }
                        //* (35)       bel_simulationProp_dat.getGridSize( $width, $height );
                        case 11: 
                        {
                            boolean __b;
                            aos.jack.jak.cursor.Cursor __c = null;
                            try {
                                __c = genCursor(0);
                                __b = __c.next();
                            }
                            finally {
                                if (__c != null) 
                                    __c.finished();
                            }
                            if (__b) 
                                __state = 12;
                             else 
                                throw planfailed;
                            break;
                        }
                        //* (37)       Random rand = new Random();
                        case 12: 
                        {
                            __local__21_2 = new java.util.Random();
                            __state = 13;
                            break;
                        }
                        //* (38)       int r = rand.nextInt( $width.as_int() * $height.as_int() );
                        case 13: 
                        {
                            __local__21_3 = __local__21_2.nextInt(__local__21_0.as_int() * __local__21_1.as_int());
                            __state = 14;
                            break;
                        }
                        //* (39)       System.out.println("RANDOM NUMBER WAS: "+ r);
                        case 14: 
                        {
                            __state = 15;
                            java.lang.System.out.println("RANDOM NUMBER WAS: " + __local__21_3);
                            break;
                        }
                        //* (42)       int i = r+1;
                        case 15: 
                        {
                            __local__21_4 = __local__21_3 + 1;
                            __state = 16;
                            break;
                        }
                        //* (43)       while(i != r)
                        case 16: 
                        {
                            if (__local__21_4 != __local__21_3) 
                                __state = 17;
                             else 
                                __state = 25;
                            break;
                        }
                        //* (45)          int x = i % $width.as_int();
                        case 17: 
                        {
                            __breakLevel = 4;
                            __local__21_5 = __local__21_4 % __local__21_0.as_int();
                            __state = 18;
                            break;
                        }
                        //* (46)          int y = (i - x) / $width.as_int();
                        case 18: 
                        {
                            __local__21_6 = (__local__21_4 - __local__21_5) / __local__21_0.as_int();
                            __state = 19;
                            break;
                        }
                        //* (49)          if(bel_obstacleAt_dat.checkUnknown(x,y))
                        case 19: 
                        {
                            if (bel_obstacleAt_dat.checkUnknown(__local__21_5,__local__21_6)) 
                                __state = 20;
                             else 
                                __state = 23;
                            break;
                        }
                        //* (52)             System.out.println("I AM GOING TO EXPLORE " + x + ", " + y);
                        case 20: 
                        {
                            __breakLevel = 6;
                            __state = 21;
                            //Store the player target

                            java.lang.System.out.println("I AM GOING TO EXPLORE " + __local__21_5 + ", " + __local__21_6);
                            break;
                        }
                        //* (53)             bel_playerTarget_dat.add( eidentifytarget_h.playerName, x, y);
                        case 21: 
                        {
                            __state = 22;
                            bel_playerTarget_dat.add(eidentifytarget_h.playerName,__local__21_5,__local__21_6);
                            break;
                        }
                        //* (54)             break;
                        case 22: 
                        {
                            __breakLevel = 2;
                            __state = 25;
                            break;
                        }
                        //* (58)          if (++i == $width.as_int() * $height.as_int() ) i = 0;
                        case 23: 
                        {
                            if (++__local__21_4 == __local__21_0.as_int() * __local__21_1.as_int()) 
                                __state = 24;
                             else 
                                __state = 16;
                            break;
                        }
                        //* (58)          if (++i == $width.as_int() * $height.as_int() ) i = 0;
                        case 24: 
                        {
                            __state = 16;
                            __local__21_4 = 0;
                            break;
                        }
                        //* (32)    body()
                        case 25: 
                        {
                            if (__pending == null) 
                                __state = PASSED_STATE;
                            __tothrow = __pending;
                            break;
                        }
                    }
                }
                catch (java.lang.Throwable e) {
                    handleException(e,__exMap_body);
                }
            }
             while (!agent.changing_focus);
            return CONTINUE;
        }
        
        public java.lang.String methodName()
        {
            return "body";
        }
        
        __bodyFSM()
        {
        }
        
        public java.lang.String stateInfo()
        {
            int n = __curstate;
            java.lang.String file = __tt__body[0];
            java.lang.String method = __tt__body[1];
            if (n < 0) 
                n = -n;
            n -= (10 - 2);
            java.lang.String line = (n < 2)?"??":__tt__body[n];
            return file + ":" + line + " " + method + " [" + __curstate + "]";
        }
        
        public java.lang.Object genObject(int __index)
        {
            switch (__index) {
            }
            aos.jack.jak.core.Jak.error("illegal Object Construction");
            return null;
        }
        
        public aos.jack.jak.cursor.Cursor genCursor(int __index)
            throws java.lang.Exception
        {
            switch (__index) {
                case 0: 
                {
                    return (bel_simulationProp_dat.getGridSize(__local__21_0,__local__21_1));
                }
            }
            aos.jack.jak.core.Jak.error("illegal Cursor Construction");
            return null;
        }
        
        public aos.jack.jak.fsm.FSM genFSM(int __index)
            throws java.lang.Exception
        {
            switch (__index) {
            }
            aos.jack.jak.core.Jak.error("illegal FSM Construction");
            return null;
        }
        
        public boolean testCondition(int __index)
            throws java.lang.Exception
        {
            switch (__index) {
            }
            aos.jack.jak.core.Jak.error("illegal test Construction");
            return false;
        }
        
        public aos.jack.jak.plan.Plan getPlan()
        {
            return rmit.ai.clima.jackagt.plans.PIdentifyExploreTarget.this;
        }
        
        protected aos.jack.jak.fsm.FSM fail()
        {
            return getPlan().fail();
        }
        
        protected aos.jack.jak.fsm.FSM pass()
        {
            return getPlan().pass();
        }
        
        public void enter()
        {
            __trace = agent.trace("rmit.ai.clima.jackagt.plans.PIdentifyExploreTarget.body");
        }
        
        public java.lang.Object getVariable(int n)
        {
            switch (n) {
                case 0: 
                {
                    return aos.util.ToObject.box(__local__21_0);
                }
                case 1: 
                {
                    return aos.util.ToObject.box(__local__21_1);
                }
                case 2: 
                {
                    return aos.util.ToObject.box(__local__21_2);
                }
                case 3: 
                {
                    return aos.util.ToObject.box(__local__21_3);
                }
                case 4: 
                {
                    return aos.util.ToObject.box(__local__21_4);
                }
                case 5: 
                {
                    return aos.util.ToObject.box(__local__21_5);
                }
                case 6: 
                {
                    return aos.util.ToObject.box(__local__21_6);
                }
                default: 
                {
                    throw new java.lang.IndexOutOfBoundsException("Reasoning Method " + methodName() + " does not have variable number " + n);
                }
            }
        }
        
        public java.lang.String[] variableNames()
        {
            return __fsmVariableNames_body;
        }
        
        public java.lang.String[] variableTypes()
        {
            return __fsmTypes_body;
        }
        
        public java.lang.String[] variableLocalNames()
        {
            return __fsmLocalNames_body;
        }
        
    }
}
