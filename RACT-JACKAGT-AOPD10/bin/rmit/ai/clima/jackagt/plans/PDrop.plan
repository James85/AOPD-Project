package rmit.ai.clima.jackagt.plans;
import rmit.ai.clima.jackagt.events.*;
import rmit.ai.clima.jackagt.data.*;

public plan PDrop extends Plan
{
   /******** Start PDT Design Block *** DO NOT EDIT IT *********/

/*
Plan Name: PDrop
*/
	//Events handled by the plan are declared here.
	#posts event EExecuteCLIMAaction eexecuteclimaaction_p;

	#handles event EExecuteAction eexecuteaction_h;


	// Declarations of any beliefset/data that the plan accesses.
	#reads data BCurrentPosition bel_currentTarget_dat;

	#reads data BCurrentPosition bel_currentPosition_dat;

	#reads data BCurrentState bel_currentState_dat;

/******** End PDT Design Block *** DO NOT EDIT IT *********/

   logical String $state;
   logical int $posX, $posY, $targetX, $targetY;
   
   static boolean relevant (EExecuteAction e)
   {
      return true;
   }
   
   context()
   {
      //Need to be in depot state and at the depot
      bel_currentState_dat.get( $state )
      && bel_currentPosition_dat.get( $posX, $posY )
      && bel_currentTarget_dat.get( $targetX, $targetY )
      && $state.as_string().equals( "depot")
      && $posX.as_int() == $targetX.as_int()
      && $posY.as_int() == $targetY.as_int();
   }

   body()
   {
      System.out.println( "Dropping gold" );
      eexecuteclimaaction_p.post("drop");
   }
}
