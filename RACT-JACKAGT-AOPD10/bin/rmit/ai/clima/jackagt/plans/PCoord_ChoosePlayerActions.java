/*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
  This code is generated by JAC version 5.4 by
  Agent Oriented Software. http://www.agent-software.com.au

    DO NOT ALTER THIS CODE AND DO NOT REMOVE THIS COMMENT
 *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*/
package rmit.ai.clima.jackagt.plans;
import aos.jack.jak.plan.Plan;
import aos.jack.jak.plan.PlanFSM;
import aos.jack.jak.plan.ExMap;
import aos.jack.jak.agent.NameSpace;
import aos.jack.jak.agent.Agent;
import aos.jack.jak.event.Event;
import aos.jack.jak.task.Task;
import aos.jack.jak.core.Generator;
import aos.jack.jak.cursor.Cursor;
import aos.jack.jak.logic.Signature;
import rmit.ai.clima.jackagt.events.EPostPlayerAction;
import rmit.ai.clima.jackagt.events.MEReturnPlayerState;
import rmit.ai.clima.jackagt.events.EFindClosestGold;
import rmit.ai.clima.jackagt.events.EIdentifyTarget;
import rmit.ai.clima.jackagt.events.EFindPath;
import rmit.ai.clima.jackagt.events.EChoosePlayerActions;
import rmit.ai.clima.jackagt.data.BPlayerPosition;
import rmit.ai.clima.jackagt.data.BPlayer;
import rmit.ai.clima.jackagt.data.BGoldAt;
import rmit.ai.clima.jackagt.data.BPlayerGold;
import rmit.ai.clima.jackagt.data.BPlayerState;
import rmit.ai.clima.jackagt.data.BMoveHint;
import rmit.ai.clima.jackagt.data.BObstacleAt;
import rmit.ai.clima.jackagt.data.BPlayerClosestGold;
import rmit.ai.clima.jackagt.data.SimulationProp;
import java.lang.Object;
import aos.jack.jak.fsm.FSM;
import aos.jack.jak.core.Jak;

public class PCoord_ChoosePlayerActions extends aos.jack.jak.plan.Plan {
    final static java.lang.String[] lookUpDirs = {
            "up",
            "down",
            "right",
            "left"};
    public rmit.ai.clima.jackagt.events.EPostPlayerAction epostplayeraction_p;
    public rmit.ai.clima.jackagt.events.MEReturnPlayerState mereturnplayerstate_s;
    public rmit.ai.clima.jackagt.events.EFindClosestGold efindclosestgold_p;
    public rmit.ai.clima.jackagt.events.EIdentifyTarget eidentifytarget_p;
    public rmit.ai.clima.jackagt.events.EFindPath efindpath_p;
    public rmit.ai.clima.jackagt.events.EChoosePlayerActions echooseplayeractions_h;
    public rmit.ai.clima.jackagt.data.BPlayerPosition bel_playerTarget_dat;
    public rmit.ai.clima.jackagt.data.BPlayer bel_players_dat;
    public rmit.ai.clima.jackagt.data.BPlayerPosition bel_playerPositions_dat;
    public rmit.ai.clima.jackagt.data.BGoldAt bel_goldAt_dat;
    public rmit.ai.clima.jackagt.data.BPlayerGold bel_playerGold_dat;
    public rmit.ai.clima.jackagt.data.BPlayerState bel_playerState_dat;
    public rmit.ai.clima.jackagt.data.BMoveHint bel_moveHint_dat;
    public rmit.ai.clima.jackagt.data.BObstacleAt bel_obstacleAt_dat;
    public rmit.ai.clima.jackagt.data.BPlayerClosestGold bel_playerClosestGold_dat;
    public rmit.ai.clima.jackagt.data.SimulationProp bel_simulationProp_dat;
    private static aos.jack.jak.plan.ExMap[] __exMap_body;
    private static java.lang.String[] __tt__body = {
            "rmit/ai/clima/jackagt/plans/PCoord_ChoosePlayerActions.plan",
            "body",
            "65",
            "66",
            "69",
            "70",
            "70",
            "72",
            "74",
            "76",
            "81",
            "82",
            "83",
            "86",
            "87",
            "88",
            "89",
            "91",
            "92",
            "95",
            "96",
            "101",
            "105",
            "106",
            "109",
            "110",
            "114",
            "115",
            "119",
            "120",
            "125",
            "131",
            "137",
            "138",
            "139",
            "141",
            "142",
            "144",
            "63"};
    private final static java.lang.String[] __planVariableNames = {
            "lookUpDirs",
            "epostplayeraction_p",
            "mereturnplayerstate_s",
            "efindclosestgold_p",
            "eidentifytarget_p",
            "efindpath_p",
            "echooseplayeractions_h",
            "bel_playerTarget_dat",
            "bel_players_dat",
            "bel_playerPositions_dat",
            "bel_goldAt_dat",
            "bel_playerGold_dat",
            "bel_playerState_dat",
            "bel_moveHint_dat",
            "bel_obstacleAt_dat",
            "bel_playerClosestGold_dat",
            "bel_simulationProp_dat"};
    private final static java.lang.String[] __planVariableTypes = {
            "String[]",
            "rmit.ai.clima.jackagt.events.EPostPlayerAction",
            "MEReturnPlayerState",
            "rmit.ai.clima.jackagt.events.EFindClosestGold",
            "EIdentifyTarget",
            "rmit.ai.clima.jackagt.events.EFindPath",
            "EChoosePlayerActions",
            "rmit.ai.clima.jackagt.data.BPlayerPosition",
            "rmit.ai.clima.jackagt.data.BPlayer",
            "rmit.ai.clima.jackagt.data.BPlayerPosition",
            "BGoldAt",
            "rmit.ai.clima.jackagt.data.BPlayerGold",
            "BPlayerState",
            "rmit.ai.clima.jackagt.data.BMoveHint",
            "rmit.ai.clima.jackagt.data.BObstacleAt",
            "rmit.ai.clima.jackagt.data.BPlayerClosestGold",
            "rmit.ai.clima.jackagt.data.SimulationProp"};
    private final static java.lang.String[] __reasoningMethods = {
            "body"};
    private final static java.lang.String[] __fsmVariableNames_body = {
            "$depotX",
            "$depotY",
            "$playerName",
            "baseName",
            "c_players",
            "$x",
            "$y",
            "$numGold",
            "goldFound",
            "c_target",
            "$targetMove",
            "$pathLength",
            "$targetX",
            "$targetY",
            "haveTarget",
            "$srcX",
            "$srcY",
            "$dstX",
            "$dstY",
            "$pathLength",
            "$dir",
            "$profit",
            "$profitX",
            "$profitY"};
    private final static java.lang.String[] __fsmTypes_body = {
            "logical int",
            "logical int",
            "logical String",
            "String",
            "Cursor",
            "logical int",
            "logical int",
            "logical int",
            "boolean",
            "Cursor",
            "logical String",
            "logical int",
            "logical int",
            "logical int",
            "boolean",
            "logical int",
            "logical int",
            "logical int",
            "logical int",
            "logical int",
            "logical String",
            "logical String",
            "logical int",
            "logical int"};
    private final static java.lang.String[] __fsmLocalNames_body = {
            "__local__18_0",
            "__local__18_1",
            "__local__18_2",
            "__local__18_3",
            "__local__18_4",
            "__local__18_5",
            "__local__18_6",
            "__local__18_7",
            "__local__18_8",
            "__local__18_9",
            "__local__18_10",
            "__local__18_11",
            "__local__18_12",
            "__local__18_13",
            "__local__18_14",
            "__local__18_15",
            "__local__18_16",
            "__local__18_17",
            "__local__18_18",
            "__local__18_19",
            "__local__18_20",
            "__local__18_21",
            "__local__18_22",
            "__local__18_23"};
    /******** End PDT Design Block *** DO NOT EDIT IT *********/

    static boolean relevant(rmit.ai.clima.jackagt.events.EChoosePlayerActions e)
    {
        return true;
    }
    
    public PCoord_ChoosePlayerActions()
    {
    }
    
    private PCoord_ChoosePlayerActions(aos.jack.jak.task.Task __t, rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions __env)
    {
        __agent = __env.__agent;
        __ns = __env.__ns;
        __planTask = __t;
        __logic = __t.logic;
        epostplayeraction_p = __env.epostplayeraction_p;
        mereturnplayerstate_s = __env.mereturnplayerstate_s;
        efindclosestgold_p = __env.efindclosestgold_p;
        eidentifytarget_p = __env.eidentifytarget_p;
        efindpath_p = __env.efindpath_p;
        echooseplayeractions_h = __env.echooseplayeractions_h;
        bel_playerTarget_dat = __env.bel_playerTarget_dat;
        bel_players_dat = __env.bel_players_dat;
        bel_playerPositions_dat = __env.bel_playerPositions_dat;
        bel_goldAt_dat = __env.bel_goldAt_dat;
        bel_playerGold_dat = __env.bel_playerGold_dat;
        bel_playerState_dat = __env.bel_playerState_dat;
        bel_moveHint_dat = __env.bel_moveHint_dat;
        bel_obstacleAt_dat = __env.bel_obstacleAt_dat;
        bel_playerClosestGold_dat = __env.bel_playerClosestGold_dat;
        bel_simulationProp_dat = __env.bel_simulationProp_dat;
    }
    
    public boolean init_sentinel(aos.jack.jak.agent.NameSpace __a)
    {
        epostplayeraction_p = (rmit.ai.clima.jackagt.events.EPostPlayerAction) __a.findEvent("rmit.ai.clima.jackagt.events.EPostPlayerAction");
        if (epostplayeraction_p == null) {
            warning("Failed to find EPostPlayerAction epostplayeraction_p");
            return false;
        }
        mereturnplayerstate_s = (rmit.ai.clima.jackagt.events.MEReturnPlayerState) __a.findEvent("rmit.ai.clima.jackagt.events.MEReturnPlayerState");
        if (mereturnplayerstate_s == null) {
            warning("Failed to find MEReturnPlayerState mereturnplayerstate_s");
            return false;
        }
        efindclosestgold_p = (rmit.ai.clima.jackagt.events.EFindClosestGold) __a.findEvent("rmit.ai.clima.jackagt.events.EFindClosestGold");
        if (efindclosestgold_p == null) {
            warning("Failed to find EFindClosestGold efindclosestgold_p");
            return false;
        }
        eidentifytarget_p = (rmit.ai.clima.jackagt.events.EIdentifyTarget) __a.findEvent("rmit.ai.clima.jackagt.events.EIdentifyTarget");
        if (eidentifytarget_p == null) {
            warning("Failed to find EIdentifyTarget eidentifytarget_p");
            return false;
        }
        efindpath_p = (rmit.ai.clima.jackagt.events.EFindPath) __a.findEvent("rmit.ai.clima.jackagt.events.EFindPath");
        if (efindpath_p == null) {
            warning("Failed to find EFindPath efindpath_p");
            return false;
        }
        echooseplayeractions_h = (rmit.ai.clima.jackagt.events.EChoosePlayerActions) __a.findEvent("rmit.ai.clima.jackagt.events.EChoosePlayerActions");
        if (echooseplayeractions_h == null) {
            warning("Failed to find EChoosePlayerActions echooseplayeractions_h");
            return false;
        }
        bel_playerTarget_dat = (rmit.ai.clima.jackagt.data.BPlayerPosition) lookupNamedObject("bel_playerTarget_dat","rmit.ai.clima.jackagt.data.BPlayerPosition",aos.jack.jak.agent.Agent.WRITEABLE);
        if (bel_playerTarget_dat == null) {
            warning("Failed to find BPlayerPosition bel_playerTarget_dat");
            return false;
        }
        bel_players_dat = (rmit.ai.clima.jackagt.data.BPlayer) lookupNamedObject("bel_players_dat","rmit.ai.clima.jackagt.data.BPlayer",0);
        if (bel_players_dat == null) {
            warning("Failed to find BPlayer bel_players_dat");
            return false;
        }
        bel_playerPositions_dat = (rmit.ai.clima.jackagt.data.BPlayerPosition) lookupNamedObject("bel_playerPositions_dat","rmit.ai.clima.jackagt.data.BPlayerPosition",0);
        if (bel_playerPositions_dat == null) {
            warning("Failed to find BPlayerPosition bel_playerPositions_dat");
            return false;
        }
        bel_goldAt_dat = (rmit.ai.clima.jackagt.data.BGoldAt) lookupNamedObject("bel_goldAt_dat","rmit.ai.clima.jackagt.data.BGoldAt",0);
        if (bel_goldAt_dat == null) {
            warning("Failed to find BGoldAt bel_goldAt_dat");
            return false;
        }
        bel_playerGold_dat = (rmit.ai.clima.jackagt.data.BPlayerGold) lookupNamedObject("bel_playerGold_dat","rmit.ai.clima.jackagt.data.BPlayerGold",0);
        if (bel_playerGold_dat == null) {
            warning("Failed to find BPlayerGold bel_playerGold_dat");
            return false;
        }
        bel_playerState_dat = (rmit.ai.clima.jackagt.data.BPlayerState) lookupNamedObject("bel_playerState_dat","rmit.ai.clima.jackagt.data.BPlayerState",0);
        if (bel_playerState_dat == null) {
            warning("Failed to find BPlayerState bel_playerState_dat");
            return false;
        }
        bel_moveHint_dat = (rmit.ai.clima.jackagt.data.BMoveHint) lookupNamedObject("bel_moveHint_dat","rmit.ai.clima.jackagt.data.BMoveHint",0);
        if (bel_moveHint_dat == null) {
            warning("Failed to find BMoveHint bel_moveHint_dat");
            return false;
        }
        bel_obstacleAt_dat = (rmit.ai.clima.jackagt.data.BObstacleAt) lookupNamedObject("bel_obstacleAt_dat","rmit.ai.clima.jackagt.data.BObstacleAt",0);
        if (bel_obstacleAt_dat == null) {
            warning("Failed to find BObstacleAt bel_obstacleAt_dat");
            return false;
        }
        bel_playerClosestGold_dat = (rmit.ai.clima.jackagt.data.BPlayerClosestGold) lookupNamedObject("bel_playerClosestGold_dat","rmit.ai.clima.jackagt.data.BPlayerClosestGold",0);
        if (bel_playerClosestGold_dat == null) {
            warning("Failed to find BPlayerClosestGold bel_playerClosestGold_dat");
            return false;
        }
        bel_simulationProp_dat = (rmit.ai.clima.jackagt.data.SimulationProp) lookupNamedObject("bel_simulationProp_dat","rmit.ai.clima.jackagt.data.SimulationProp",0);
        if (bel_simulationProp_dat == null) {
            warning("Failed to find SimulationProp bel_simulationProp_dat");
            return false;
        }
        return true;
    }
    
    public aos.jack.jak.plan.Plan freeze()
    {
        return this;
    }
    
    public aos.jack.jak.plan.Plan unfreeze()
    {
        return this;
    }
    
    public java.lang.Object genObject(int __index)
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal Object Construction");
        return null;
    }
    
    public aos.jack.jak.cursor.Cursor genCursor(int __index)
        throws java.lang.Exception
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal Cursor Construction");
        return null;
    }
    
    public aos.jack.jak.fsm.FSM genFSM(int __index)
        throws java.lang.Exception
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal FSM Construction");
        return null;
    }
    
    public boolean testCondition(int __index)
        throws java.lang.Exception
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal test Construction");
        return false;
    }
    
    public aos.jack.jak.plan.PlanFSM body()
    {
        return new rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions.__bodyFSM();
    }
    
    private PCoord_ChoosePlayerActions(rmit.ai.clima.jackagt.events.EChoosePlayerActions __ev, aos.jack.jak.task.Task __t, rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions __env)
    {
        this(__t,__env);
        this.echooseplayeractions_h = __ev;
    }
    
    protected aos.jack.jak.logic.Signature eventSignature(int __log)
    {
        return echooseplayeractions_h.getSignature(__log);
    }
    
    public java.lang.String handledEvent()
    {
        return "rmit.ai.clima.jackagt.events.EChoosePlayerActions";
    }
    
    public boolean __relevant(aos.jack.jak.event.Event __e)
    {
        return __ns.isEnabled() && relevant(((rmit.ai.clima.jackagt.events.EChoosePlayerActions) __e));
    }
    
    public aos.jack.jak.plan.Plan createPlan(aos.jack.jak.event.Event __e, aos.jack.jak.task.Task __t)
    {
        if (!(__e instanceof rmit.ai.clima.jackagt.events.EChoosePlayerActions)) 
            return null;
        rmit.ai.clima.jackagt.events.EChoosePlayerActions __e1 = (rmit.ai.clima.jackagt.events.EChoosePlayerActions) __e;
        return new rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions(__e1,__t,this);
    }
    
    public java.lang.String[] variableNames()
    {
        return __planVariableNames;
    }
    
    public java.lang.String[] variableTypes()
    {
        return __planVariableTypes;
    }
    
    public java.lang.Object getVariable(int n)
    {
        switch (n) {
            case 0: 
            {
                return aos.util.ToObject.box(lookUpDirs);
            }
            case 1: 
            {
                return aos.util.ToObject.box(epostplayeraction_p);
            }
            case 2: 
            {
                return aos.util.ToObject.box(mereturnplayerstate_s);
            }
            case 3: 
            {
                return aos.util.ToObject.box(efindclosestgold_p);
            }
            case 4: 
            {
                return aos.util.ToObject.box(eidentifytarget_p);
            }
            case 5: 
            {
                return aos.util.ToObject.box(efindpath_p);
            }
            case 6: 
            {
                return aos.util.ToObject.box(echooseplayeractions_h);
            }
            case 7: 
            {
                return aos.util.ToObject.box(bel_playerTarget_dat);
            }
            case 8: 
            {
                return aos.util.ToObject.box(bel_players_dat);
            }
            case 9: 
            {
                return aos.util.ToObject.box(bel_playerPositions_dat);
            }
            case 10: 
            {
                return aos.util.ToObject.box(bel_goldAt_dat);
            }
            case 11: 
            {
                return aos.util.ToObject.box(bel_playerGold_dat);
            }
            case 12: 
            {
                return aos.util.ToObject.box(bel_playerState_dat);
            }
            case 13: 
            {
                return aos.util.ToObject.box(bel_moveHint_dat);
            }
            case 14: 
            {
                return aos.util.ToObject.box(bel_obstacleAt_dat);
            }
            case 15: 
            {
                return aos.util.ToObject.box(bel_playerClosestGold_dat);
            }
            case 16: 
            {
                return aos.util.ToObject.box(bel_simulationProp_dat);
            }
            default: 
            {
                throw new java.lang.IndexOutOfBoundsException("Plan " + this + " does not have variable number " + n);
            }
        }
    }
    
    public java.lang.String[] reasoningMethods()
    {
        return mergeReasoningMethods(__reasoningMethods,super.reasoningMethods());
    }
    
    public aos.jack.jak.cursor.Cursor context()
    {
        try {
            return (((true)?aos.jack.jak.cursor.Cursor.trueCursor:aos.jack.jak.cursor.Cursor.falseCursor));
        }
        catch (java.lang.Exception e) {
            e.printStackTrace();
            return aos.jack.jak.cursor.Cursor.falseCursor;
        }
    }
    
    class __bodyFSM extends aos.jack.jak.plan.PlanFSM implements aos.jack.jak.core.Generator {
        aos.jack.jak.logic.IntegerVariable __local__18_0;
        aos.jack.jak.logic.IntegerVariable __local__18_1;
        aos.jack.jak.logic.StringVariable __local__18_2;
        java.lang.String __local__18_3;
        aos.jack.jak.cursor.Cursor __local__18_4;
        aos.jack.jak.logic.IntegerVariable __local__18_5;
        aos.jack.jak.logic.IntegerVariable __local__18_6;
        aos.jack.jak.logic.IntegerVariable __local__18_7;
        boolean __local__18_8;
        aos.jack.jak.cursor.Cursor __local__18_9;
        aos.jack.jak.logic.StringVariable __local__18_10;
        aos.jack.jak.logic.IntegerVariable __local__18_11;
        aos.jack.jak.logic.IntegerVariable __local__18_12;
        aos.jack.jak.logic.IntegerVariable __local__18_13;
        boolean __local__18_14;
        aos.jack.jak.logic.IntegerVariable __local__18_15;
        aos.jack.jak.logic.IntegerVariable __local__18_16;
        aos.jack.jak.logic.IntegerVariable __local__18_17;
        aos.jack.jak.logic.IntegerVariable __local__18_18;
        aos.jack.jak.logic.IntegerVariable __local__18_19;
        aos.jack.jak.logic.StringVariable __local__18_20;
        aos.jack.jak.logic.StringVariable __local__18_21;
        aos.jack.jak.logic.IntegerVariable __local__18_22;
        aos.jack.jak.logic.IntegerVariable __local__18_23;
        private int __breakLevel = 0;
        public int run(int __status)
            throws java.lang.Throwable
        {
            do {
                try {
                    if (__tothrow != null) 
                        throw __tothrow;
                    if ((aos.jack.jak.core.Jak.debugging & aos.jack.jak.core.Jak.LOG_PLANS) != 0) 
                        aos.util.logging.LogMsg.log(this,aos.jack.jak.core.Jak.LOG_PLANS,__task + "-PCoord_ChoosePlayerActions.body:" + java.lang.Integer.toString(__state));
                    if (__task.nsteps > 0) {
                        __task.nsteps-- ;
                        if (__task.nsteps == 0) 
                            agent.changeFocus();
                    }
                    if (__state < 10) {
                        __status = super.stdrun(rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions.this,__status);
                        if (__status != CONTINUE || agent.changing_focus) 
                            return __status;
                        continue;
                    }
                    __curstate = __state;
                    switch (__state) {
                        default: 
                        {
                            aos.jack.jak.core.Jak.error("PCoord_ChoosePlayerActions.body: Illegal state");
                            return FAILED_STATE;
                        }
                        //* (65)       logical int $depotX, $depotY;
                        case 10: 
                        {
                            __breakLevel = 0;
                            __local__18_0 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__18_1 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 11;
                            break;
                        }
                        //* (66)       bel_simulationProp_dat.getDepotLoc( $depotX, $depotY );
                        case 11: 
                        {
                            boolean __b;
                            aos.jack.jak.cursor.Cursor __c = null;
                            try {
                                __c = genCursor(0);
                                __b = __c.next();
                            }
                            finally {
                                if (__c != null) 
                                    __c.finished();
                            }
                            if (__b) 
                                __state = 12;
                             else 
                                throw planfailed;
                            break;
                        }
                        //* (69)       @subtask(efindclosestgold_p.post());
                        case 12: 
                        {
                            __task.push(efindclosestgold_p.post());
                            __state = -__state;
                            __subtask_pass = 13;
                            __subtask_fail = 4;
                            return SUBTASK;
                        }
                        //* (70)       return true;
                        case 13: 
                        {
                            if (true) 
                                __state = 14;
                             else 
                                throw planfailed;
                            break;
                        }
                        //* (70)       return true;
                        case 14: 
                        {
                            __breakLevel = 0;
                            __state = 46;
                            break;
                        }
                        //* (72)       logical String $playerName;
                        case 15: 
                        {
                            __local__18_2 = (aos.jack.jak.logic.StringVariable) __logic.new_variable(java.lang.String.class);
                            __state = 16;
                            break;
                        }
                        //* (74)       Cursor c_players = bel_players_dat.get( $playerName );
                        case 16: 
                        {
                            __local__18_4 = (aos.jack.jak.cursor.Cursor) genCursor(1);
                            __state = 17;
                            break;
                        }
                        //* (76)       while (c_players.next())
                        case 17: 
                        {
                            if (__local__18_4.next()) 
                                __state = 18;
                             else 
                                __state = 40;
                            break;
                        }
                        //* (81)          logical int $x, $y;
                        case 18: 
                        {
                            __breakLevel = 4;
                            __local__18_5 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__18_6 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 19;
                            break;
                        }
                        //* (82)          logical int $numGold;
                        case 19: 
                        {
                            __local__18_7 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 20;
                            break;
                        }
                        //* (83)          boolean goldFound = false;
                        case 20: 
                        {
                            __local__18_8 = false;
                            __state = 21;
                            break;
                        }
                        //* (86)          logical String $targetMove;
                        case 21: 
                        {
                            __local__18_10 = (aos.jack.jak.logic.StringVariable) __logic.new_variable(java.lang.String.class);
                            __state = 22;
                            break;
                        }
                        //* (87)          logical int $pathLength;
                        case 22: 
                        {
                            __local__18_11 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 23;
                            break;
                        }
                        //* (88)          logical int $targetX, $targetY;
                        case 23: 
                        {
                            __local__18_12 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__18_13 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 24;
                            break;
                        }
                        //* (89)          boolean haveTarget = false;
                        case 24: 
                        {
                            __local__18_14 = false;
                            __state = 25;
                            break;
                        }
                        //* (91)          baseName = $playerName.as_string();
                        case 25: 
                        {
                            __state = 26;
                            __local__18_3 = __local__18_2.as_string();
                            break;
                        }
                        //* (92)          baseName = baseName.substring(0,baseName.indexOf("@"));
                        case 26: 
                        {
                            __state = 27;
                            __local__18_3 = __local__18_3.substring(0,__local__18_3.indexOf("@"));
                            break;
                        }
                        //* (95)          bel_playerPositions_dat.getByName( $playerName.as_string(), $x, $y );
                        case 27: 
                        {
                            boolean __b;
                            aos.jack.jak.cursor.Cursor __c = null;
                            try {
                                __c = genCursor(2);
                                __b = __c.next();
                            }
                            finally {
                                if (__c != null) 
                                    __c.finished();
                            }
                            if (__b) 
                                __state = 28;
                             else 
                                throw planfailed;
                            break;
                        }
                        //* (96)          bel_playerGold_dat.getByName( $playerName.as_string(), $numGold );
                        case 28: 
                        {
                            boolean __b;
                            aos.jack.jak.cursor.Cursor __c = null;
                            try {
                                __c = genCursor(3);
                                __b = __c.next();
                            }
                            finally {
                                if (__c != null) 
                                    __c.finished();
                            }
                            if (__b) 
                                __state = 29;
                             else 
                                throw planfailed;
                            break;
                        }
                        //* (101)          if (bel_playerTarget_dat.getByName($playerName.as_string(), $targetX, $targetY ))
                        case 29: 
                        {
                            boolean __b;
                            aos.jack.jak.cursor.Cursor __c = null;
                            try {
                                __c = genCursor(4);
                                __b = __c.next();
                            }
                            finally {
                                if (__c != null) 
                                    __c.finished();
                            }
                            if (__b) 
                                __state = 30;
                             else 
                                __state = 39;
                            break;
                        }
                        //* (105)             @subtask(efindpath_p.post( $playerName.as_string(), $x.as_int(), $y.as_int(), $targetX.as_int(), $targetY.as_int() ));
                        case 30: 
                        {
                            __breakLevel = 6;
                            __task.push(efindpath_p.post(__local__18_2.as_string(),__local__18_5.as_int(),__local__18_6.as_int(),__local__18_12.as_int(),__local__18_13.as_int()));
                            __state = -__state;
                            __subtask_pass = 31;
                            __subtask_fail = 4;
                            return SUBTASK;
                        }
                        //* (106)             c_target = bel_moveHint_dat.getByEndPoints($x.as_int(), $y.as_int(), $targetX.as_int(), $targetY.as_int(), $targetMove, $pathLength);
                        case 31: 
                        {
                            __state = 32;
                            __local__18_9 = (aos.jack.jak.beliefset.BeliefSetCursor) genCursor(5);
                            break;
                        }
                        //* (109)             if (!c_target.next()) {
                        case 32: 
                        {
                            if (!__local__18_9.next()) 
                                __state = 33;
                             else 
                                __state = 34;
                            break;
                        }
                        //* (110)                bel_playerTarget_dat.remove( $playerName.as_string(), $targetX.as_int(), $targetY.as_int() );
                        case 33: 
                        {
                            __breakLevel = 8;
                            __state = 39;
                            bel_playerTarget_dat.remove(__local__18_2.as_string(),__local__18_12.as_int(),__local__18_13.as_int());
                            break;
                        }
                        //* (114)             }else if( !bel_obstacleAt_dat.checkUnknown($targetX.as_int(), $targetY.as_int() )) {
                        case 34: 
                        {
                            if (!bel_obstacleAt_dat.checkUnknown(__local__18_12.as_int(),__local__18_13.as_int())) 
                                __state = 35;
                             else 
                                __state = 36;
                            break;
                        }
                        //* (115)                bel_playerTarget_dat.remove( $playerName.as_string(), $targetX.as_int(), $targetY.as_int() );
                        case 35: 
                        {
                            __breakLevel = 8;
                            __state = 39;
                            bel_playerTarget_dat.remove(__local__18_2.as_string(),__local__18_12.as_int(),__local__18_13.as_int());
                            break;
                        }
                        //* (119)             }else if ($targetX.as_int() == $x.as_int() && $targetY.as_int() == $y.as_int()) {
                        case 36: 
                        {
                            if (__local__18_12.as_int() == __local__18_5.as_int() && __local__18_13.as_int() == __local__18_6.as_int()) 
                                __state = 37;
                             else 
                                __state = 38;
                            break;
                        }
                        //* (120)                bel_playerTarget_dat.remove( $playerName.as_string(), $targetX.as_int(), $targetY.as_int() );
                        case 37: 
                        {
                            __breakLevel = 8;
                            __state = 39;
                            bel_playerTarget_dat.remove(__local__18_2.as_string(),__local__18_12.as_int(),__local__18_13.as_int());
                            break;
                        }
                        //* (125)                haveTarget = true;
                        case 38: 
                        {
                            __breakLevel = 8;
                            __state = 39;
                            __local__18_14 = true;
                            break;
                        }
                        //* (131)          @subtask(epostplayeraction_p.post($playerName.as_string()));
                        case 39: 
                        {
                            __task.push(epostplayeraction_p.post(__local__18_2.as_string()));
                            __state = -__state;
                            __subtask_pass = 17;
                            __subtask_fail = 4;
                            return SUBTASK;
                        }
                        //* (137)       logical int $srcX, $srcY,  $dstX,  $dstY, $pathLength;
                        case 40: 
                        {
                            __local__18_15 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__18_16 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__18_17 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__18_18 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__18_19 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 41;
                            break;
                        }
                        //* (138)       logical String $dir;
                        case 41: 
                        {
                            __local__18_20 = (aos.jack.jak.logic.StringVariable) __logic.new_variable(java.lang.String.class);
                            __state = 42;
                            break;
                        }
                        //* (139)       bel_moveHint_dat.get($srcX, $srcY, $dstX, $dstY, $dir, $pathLength).removeAll();
                        case 42: 
                        {
                            __state = 43;
                            bel_moveHint_dat.get(__local__18_15,__local__18_16,__local__18_17,__local__18_18,__local__18_20,__local__18_19).removeAll();
                            break;
                        }
                        //* (141)       logical String $profit;
                        case 43: 
                        {
                            __local__18_21 = (aos.jack.jak.logic.StringVariable) __logic.new_variable(java.lang.String.class);
                            __state = 44;
                            break;
                        }
                        //* (142)       logical int $profitX, $profitY;
                        case 44: 
                        {
                            __local__18_22 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__18_23 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 45;
                            break;
                        }
                        //* (144)       bel_playerClosestGold_dat.get( $profit, $profitX, $profitY ).removeAll();
                        case 45: 
                        {
                            __state = 46;
                            bel_playerClosestGold_dat.get(__local__18_21,__local__18_22,__local__18_23).removeAll();
                            break;
                        }
                        //* (63)    body()
                        case 46: 
                        {
                            if (__pending == null) 
                                __state = PASSED_STATE;
                            __tothrow = __pending;
                            break;
                        }
                    }
                }
                catch (java.lang.Throwable e) {
                    handleException(e,__exMap_body);
                }
            }
             while (!agent.changing_focus);
            return CONTINUE;
        }
        
        public java.lang.String methodName()
        {
            return "body";
        }
        
        __bodyFSM()
        {
        }
        
        public java.lang.String stateInfo()
        {
            int n = __curstate;
            java.lang.String file = __tt__body[0];
            java.lang.String method = __tt__body[1];
            if (n < 0) 
                n = -n;
            n -= (10 - 2);
            java.lang.String line = (n < 2)?"??":__tt__body[n];
            return file + ":" + line + " " + method + " [" + __curstate + "]";
        }
        
        public java.lang.Object genObject(int __index)
        {
            switch (__index) {
            }
            aos.jack.jak.core.Jak.error("illegal Object Construction");
            return null;
        }
        
        public aos.jack.jak.cursor.Cursor genCursor(int __index)
            throws java.lang.Exception
        {
            switch (__index) {
                case 0: 
                {
                    return (bel_simulationProp_dat.getDepotLoc(__local__18_0,__local__18_1));
                }
                case 1: 
                {
                    return (bel_players_dat.get(__local__18_2));
                }
                case 2: 
                {
                    return (bel_playerPositions_dat.getByName(__local__18_2.as_string(),__local__18_5,__local__18_6));
                }
                case 3: 
                {
                    return (bel_playerGold_dat.getByName(__local__18_2.as_string(),__local__18_7));
                }
                case 4: 
                {
                    return (bel_playerTarget_dat.getByName(__local__18_2.as_string(),__local__18_12,__local__18_13));
                }
                case 5: 
                {
                    return (bel_moveHint_dat.getByEndPoints(__local__18_5.as_int(),__local__18_6.as_int(),__local__18_12.as_int(),__local__18_13.as_int(),__local__18_10,__local__18_11));
                }
            }
            aos.jack.jak.core.Jak.error("illegal Cursor Construction");
            return null;
        }
        
        public aos.jack.jak.fsm.FSM genFSM(int __index)
            throws java.lang.Exception
        {
            switch (__index) {
            }
            aos.jack.jak.core.Jak.error("illegal FSM Construction");
            return null;
        }
        
        public boolean testCondition(int __index)
            throws java.lang.Exception
        {
            switch (__index) {
            }
            aos.jack.jak.core.Jak.error("illegal test Construction");
            return false;
        }
        
        public aos.jack.jak.plan.Plan getPlan()
        {
            return rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions.this;
        }
        
        protected aos.jack.jak.fsm.FSM fail()
        {
            return getPlan().fail();
        }
        
        protected aos.jack.jak.fsm.FSM pass()
        {
            return getPlan().pass();
        }
        
        public void enter()
        {
            __trace = agent.trace("rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions.body");
        }
        
        public java.lang.Object getVariable(int n)
        {
            switch (n) {
                case 0: 
                {
                    return aos.util.ToObject.box(__local__18_0);
                }
                case 1: 
                {
                    return aos.util.ToObject.box(__local__18_1);
                }
                case 2: 
                {
                    return aos.util.ToObject.box(__local__18_2);
                }
                case 3: 
                {
                    return aos.util.ToObject.box(__local__18_3);
                }
                case 4: 
                {
                    return aos.util.ToObject.box(__local__18_4);
                }
                case 5: 
                {
                    return aos.util.ToObject.box(__local__18_5);
                }
                case 6: 
                {
                    return aos.util.ToObject.box(__local__18_6);
                }
                case 7: 
                {
                    return aos.util.ToObject.box(__local__18_7);
                }
                case 8: 
                {
                    return aos.util.ToObject.box(__local__18_8);
                }
                case 9: 
                {
                    return aos.util.ToObject.box(__local__18_9);
                }
                case 10: 
                {
                    return aos.util.ToObject.box(__local__18_10);
                }
                case 11: 
                {
                    return aos.util.ToObject.box(__local__18_11);
                }
                case 12: 
                {
                    return aos.util.ToObject.box(__local__18_12);
                }
                case 13: 
                {
                    return aos.util.ToObject.box(__local__18_13);
                }
                case 14: 
                {
                    return aos.util.ToObject.box(__local__18_14);
                }
                case 15: 
                {
                    return aos.util.ToObject.box(__local__18_15);
                }
                case 16: 
                {
                    return aos.util.ToObject.box(__local__18_16);
                }
                case 17: 
                {
                    return aos.util.ToObject.box(__local__18_17);
                }
                case 18: 
                {
                    return aos.util.ToObject.box(__local__18_18);
                }
                case 19: 
                {
                    return aos.util.ToObject.box(__local__18_19);
                }
                case 20: 
                {
                    return aos.util.ToObject.box(__local__18_20);
                }
                case 21: 
                {
                    return aos.util.ToObject.box(__local__18_21);
                }
                case 22: 
                {
                    return aos.util.ToObject.box(__local__18_22);
                }
                case 23: 
                {
                    return aos.util.ToObject.box(__local__18_23);
                }
                default: 
                {
                    throw new java.lang.IndexOutOfBoundsException("Reasoning Method " + methodName() + " does not have variable number " + n);
                }
            }
        }
        
        public java.lang.String[] variableNames()
        {
            return __fsmVariableNames_body;
        }
        
        public java.lang.String[] variableTypes()
        {
            return __fsmTypes_body;
        }
        
        public java.lang.String[] variableLocalNames()
        {
            return __fsmLocalNames_body;
        }
        
    }
}
