/*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
  This code is generated by JAC version 5.4 by
  Agent Oriented Software. http://www.agent-software.com.au

    DO NOT ALTER THIS CODE AND DO NOT REMOVE THIS COMMENT
 *=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*/
package rmit.ai.clima.jackagt.plans;
import aos.jack.jak.plan.Plan;
import aos.jack.jak.plan.PlanFSM;
import aos.jack.jak.plan.ExMap;
import aos.jack.jak.agent.NameSpace;
import aos.jack.jak.event.Event;
import aos.jack.jak.task.Task;
import aos.jack.jak.core.Generator;
import aos.jack.jak.cursor.Cursor;
import aos.jack.jak.logic.Signature;
import rmit.ai.clima.jackagt.events.MEPlayerAction;
import rmit.ai.clima.jackagt.events.EChoosePlayerActions;
import rmit.ai.clima.jackagt.data.BPlayerPosition;
import rmit.ai.clima.jackagt.data.BGoldAt;
import rmit.ai.clima.jackagt.data.BPlayerGold;
import rmit.ai.clima.jackagt.data.BPlayer;
import rmit.ai.clima.gui.grid.GridPoint;
import java.lang.Object;
import aos.jack.jak.fsm.FSM;
import aos.jack.jak.core.Jak;

public class PCoord_ChoosePlayerActions extends aos.jack.jak.plan.Plan {
    final static java.lang.String[] lookUpDirs = {
            "up",
            "down",
            "right",
            "left"};
    public rmit.ai.clima.jackagt.events.MEPlayerAction meplayeraction_s;
    public rmit.ai.clima.jackagt.events.EChoosePlayerActions echooseplayeractions_h;
    public rmit.ai.clima.jackagt.data.BPlayerPosition bel_playerPositions_dat;
    public rmit.ai.clima.jackagt.data.BGoldAt bel_goldAt_dat;
    public rmit.ai.clima.jackagt.data.BPlayerGold bel_playerGold_dat;
    public rmit.ai.clima.jackagt.data.BPlayer bel_players_dat;
    private static aos.jack.jak.plan.ExMap[] __exMap_body;
    private static java.lang.String[] __tt__body = {
            "rmit/ai/clima/jackagt/plans/PCoord_ChoosePlayerActions.plan",
            "body",
            "45",
            "47",
            "48",
            "49",
            "51",
            "52",
            "53",
            "55",
            "56",
            "60",
            "61",
            "63",
            "66",
            "68",
            "69",
            "72",
            "74",
            "75",
            "79",
            "79",
            "82",
            "83",
            "86",
            "87",
            "88",
            "79",
            "92",
            "94",
            "41"};
    private final static java.lang.String[] __planVariableNames = {
            "lookUpDirs",
            "meplayeraction_s",
            "echooseplayeractions_h",
            "bel_playerPositions_dat",
            "bel_goldAt_dat",
            "bel_playerGold_dat",
            "bel_players_dat"};
    private final static java.lang.String[] __planVariableTypes = {
            "java.lang.String[]",
            "MEPlayerAction",
            "EChoosePlayerActions",
            "rmit.ai.clima.jackagt.data.BPlayerPosition",
            "rmit.ai.clima.jackagt.data.BGoldAt",
            "rmit.ai.clima.jackagt.data.BPlayerGold",
            "rmit.ai.clima.jackagt.data.BPlayer"};
    private final static java.lang.String[] __reasoningMethods = {
            "body"};
    private final static java.lang.String[] __fsmVariableNames_body = {
            "$playerName",
            "baseName",
            "c_players",
            "$x",
            "$y",
            "$numGold",
            "goldFound",
            "d",
            "lookUpLoc"};
    private final static java.lang.String[] __fsmTypes_body = {
            "logical String",
            "String",
            "Cursor",
            "logical int",
            "logical int",
            "logical int",
            "boolean",
            "int",
            "GridPoint"};
    private final static java.lang.String[] __fsmLocalNames_body = {
            "__local__18_0",
            "__local__18_1",
            "__local__18_2",
            "__local__18_3",
            "__local__18_4",
            "__local__18_5",
            "__local__18_6",
            "__local__18_7",
            "__local__18_8"};
    /******** End PDT Design Block *** DO NOT EDIT IT *********/

    static boolean relevant(rmit.ai.clima.jackagt.events.EChoosePlayerActions e)
    {
        return true;
    }
    
    public PCoord_ChoosePlayerActions()
    {
    }
    
    private PCoord_ChoosePlayerActions(aos.jack.jak.task.Task __t, rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions __env)
    {
        __agent = __env.__agent;
        __ns = __env.__ns;
        __planTask = __t;
        __logic = __t.logic;
        meplayeraction_s = __env.meplayeraction_s;
        echooseplayeractions_h = __env.echooseplayeractions_h;
        bel_playerPositions_dat = __env.bel_playerPositions_dat;
        bel_goldAt_dat = __env.bel_goldAt_dat;
        bel_playerGold_dat = __env.bel_playerGold_dat;
        bel_players_dat = __env.bel_players_dat;
    }
    
    public boolean init_sentinel(aos.jack.jak.agent.NameSpace __a)
    {
        meplayeraction_s = (rmit.ai.clima.jackagt.events.MEPlayerAction) __a.findEvent("rmit.ai.clima.jackagt.events.MEPlayerAction");
        if (meplayeraction_s == null) {
            warning("Failed to find MEPlayerAction meplayeraction_s");
            return false;
        }
        echooseplayeractions_h = (rmit.ai.clima.jackagt.events.EChoosePlayerActions) __a.findEvent("rmit.ai.clima.jackagt.events.EChoosePlayerActions");
        if (echooseplayeractions_h == null) {
            warning("Failed to find EChoosePlayerActions echooseplayeractions_h");
            return false;
        }
        bel_playerPositions_dat = (rmit.ai.clima.jackagt.data.BPlayerPosition) lookupNamedObject("bel_playerPositions_dat","rmit.ai.clima.jackagt.data.BPlayerPosition",0);
        if (bel_playerPositions_dat == null) {
            warning("Failed to find BPlayerPosition bel_playerPositions_dat");
            return false;
        }
        bel_goldAt_dat = (rmit.ai.clima.jackagt.data.BGoldAt) lookupNamedObject("bel_goldAt_dat","rmit.ai.clima.jackagt.data.BGoldAt",0);
        if (bel_goldAt_dat == null) {
            warning("Failed to find BGoldAt bel_goldAt_dat");
            return false;
        }
        bel_playerGold_dat = (rmit.ai.clima.jackagt.data.BPlayerGold) lookupNamedObject("bel_playerGold_dat","rmit.ai.clima.jackagt.data.BPlayerGold",0);
        if (bel_playerGold_dat == null) {
            warning("Failed to find BPlayerGold bel_playerGold_dat");
            return false;
        }
        bel_players_dat = (rmit.ai.clima.jackagt.data.BPlayer) lookupNamedObject("bel_players_dat","rmit.ai.clima.jackagt.data.BPlayer",0);
        if (bel_players_dat == null) {
            warning("Failed to find BPlayer bel_players_dat");
            return false;
        }
        return true;
    }
    
    public aos.jack.jak.plan.Plan freeze()
    {
        return this;
    }
    
    public aos.jack.jak.plan.Plan unfreeze()
    {
        return this;
    }
    
    public java.lang.Object genObject(int __index)
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal Object Construction");
        return null;
    }
    
    public aos.jack.jak.cursor.Cursor genCursor(int __index)
        throws java.lang.Exception
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal Cursor Construction");
        return null;
    }
    
    public aos.jack.jak.fsm.FSM genFSM(int __index)
        throws java.lang.Exception
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal FSM Construction");
        return null;
    }
    
    public boolean testCondition(int __index)
        throws java.lang.Exception
    {
        switch (__index) {
        }
        aos.jack.jak.core.Jak.error("illegal test Construction");
        return false;
    }
    
    public aos.jack.jak.plan.PlanFSM body()
    {
        return new rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions.__bodyFSM();
    }
    
    private PCoord_ChoosePlayerActions(rmit.ai.clima.jackagt.events.EChoosePlayerActions __ev, aos.jack.jak.task.Task __t, rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions __env)
    {
        this(__t,__env);
        this.echooseplayeractions_h = __ev;
    }
    
    protected aos.jack.jak.logic.Signature eventSignature(int __log)
    {
        return echooseplayeractions_h.getSignature(__log);
    }
    
    public java.lang.String handledEvent()
    {
        return "rmit.ai.clima.jackagt.events.EChoosePlayerActions";
    }
    
    public boolean __relevant(aos.jack.jak.event.Event __e)
    {
        return __ns.isEnabled() && relevant(((rmit.ai.clima.jackagt.events.EChoosePlayerActions) __e));
    }
    
    public aos.jack.jak.plan.Plan createPlan(aos.jack.jak.event.Event __e, aos.jack.jak.task.Task __t)
    {
        if (!(__e instanceof rmit.ai.clima.jackagt.events.EChoosePlayerActions)) 
            return null;
        rmit.ai.clima.jackagt.events.EChoosePlayerActions __e1 = (rmit.ai.clima.jackagt.events.EChoosePlayerActions) __e;
        return new rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions(__e1,__t,this);
    }
    
    public java.lang.String[] variableNames()
    {
        return __planVariableNames;
    }
    
    public java.lang.String[] variableTypes()
    {
        return __planVariableTypes;
    }
    
    public java.lang.Object getVariable(int n)
    {
        switch (n) {
            case 0: 
            {
                return aos.util.ToObject.box(lookUpDirs);
            }
            case 1: 
            {
                return aos.util.ToObject.box(meplayeraction_s);
            }
            case 2: 
            {
                return aos.util.ToObject.box(echooseplayeractions_h);
            }
            case 3: 
            {
                return aos.util.ToObject.box(bel_playerPositions_dat);
            }
            case 4: 
            {
                return aos.util.ToObject.box(bel_goldAt_dat);
            }
            case 5: 
            {
                return aos.util.ToObject.box(bel_playerGold_dat);
            }
            case 6: 
            {
                return aos.util.ToObject.box(bel_players_dat);
            }
            default: 
            {
                throw new java.lang.IndexOutOfBoundsException("Plan " + this + " does not have variable number " + n);
            }
        }
    }
    
    public java.lang.String[] reasoningMethods()
    {
        return mergeReasoningMethods(__reasoningMethods,super.reasoningMethods());
    }
    
    public aos.jack.jak.cursor.Cursor context()
    {
        try {
            return (((true)?aos.jack.jak.cursor.Cursor.trueCursor:aos.jack.jak.cursor.Cursor.falseCursor));
        }
        catch (java.lang.Exception e) {
            e.printStackTrace();
            return aos.jack.jak.cursor.Cursor.falseCursor;
        }
    }
    
    class __bodyFSM extends aos.jack.jak.plan.PlanFSM implements aos.jack.jak.core.Generator {
        aos.jack.jak.logic.StringVariable __local__18_0;
        java.lang.String __local__18_1;
        aos.jack.jak.cursor.Cursor __local__18_2;
        aos.jack.jak.logic.IntegerVariable __local__18_3;
        aos.jack.jak.logic.IntegerVariable __local__18_4;
        aos.jack.jak.logic.IntegerVariable __local__18_5;
        boolean __local__18_6;
        int __local__18_7;
        rmit.ai.clima.gui.grid.GridPoint __local__18_8;
        private int __breakLevel = 0;
        public int run(int __status)
            throws java.lang.Throwable
        {
            do {
                try {
                    if (__tothrow != null) 
                        throw __tothrow;
                    if ((aos.jack.jak.core.Jak.debugging & aos.jack.jak.core.Jak.LOG_PLANS) != 0) 
                        aos.util.logging.LogMsg.log(this,aos.jack.jak.core.Jak.LOG_PLANS,__task + "-PCoord_ChoosePlayerActions.body:" + java.lang.Integer.toString(__state));
                    if (__task.nsteps > 0) {
                        __task.nsteps-- ;
                        if (__task.nsteps == 0) 
                            agent.changeFocus();
                    }
                    if (__state < 10) {
                        __status = super.stdrun(rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions.this,__status);
                        if (__status != CONTINUE || agent.changing_focus) 
                            return __status;
                        continue;
                    }
                    __curstate = __state;
                    switch (__state) {
                        default: 
                        {
                            aos.jack.jak.core.Jak.error("PCoord_ChoosePlayerActions.body: Illegal state");
                            return FAILED_STATE;
                        }
                        //* (45)       logical String $playerName;
                        case 10: 
                        {
                            __breakLevel = 0;
                            __local__18_0 = (aos.jack.jak.logic.StringVariable) __logic.new_variable(java.lang.String.class);
                            __state = 11;
                            break;
                        }
                        //* (47)       Cursor c_players = bel_players_dat.get( $playerName );
                        case 11: 
                        {
                            __local__18_2 = (aos.jack.jak.cursor.Cursor) genCursor(0);
                            __state = 12;
                            break;
                        }
                        //* (48)       System.out.println(bel_goldAt_dat.nFacts());
                        case 12: 
                        {
                            __state = 13;
                            java.lang.System.out.println(bel_goldAt_dat.nFacts());
                            break;
                        }
                        //* (49)       while (c_players.next())
                        case 13: 
                        {
                            if (__local__18_2.next()) 
                                __state = 14;
                             else 
                                __state = 38;
                            break;
                        }
                        //* (51)          logical int $x, $y;
                        case 14: 
                        {
                            __breakLevel = 4;
                            __local__18_3 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __local__18_4 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 15;
                            break;
                        }
                        //* (52)          logical int $numGold;
                        case 15: 
                        {
                            __local__18_5 = (aos.jack.jak.logic.IntegerVariable) __logic.new_variable(java.lang.Integer.TYPE);
                            __state = 16;
                            break;
                        }
                        //* (53)          boolean goldFound = false;
                        case 16: 
                        {
                            __local__18_6 = false;
                            __state = 17;
                            break;
                        }
                        //* (55)          baseName = $playerName.as_string();
                        case 17: 
                        {
                            __state = 18;
                            __local__18_1 = __local__18_0.as_string();
                            break;
                        }
                        //* (56)          baseName = baseName.substring(0,baseName.indexOf("@"));
                        case 18: 
                        {
                            __state = 19;
                            __local__18_1 = __local__18_1.substring(0,__local__18_1.indexOf("@"));
                            break;
                        }
                        //* (60)          bel_playerPositions_dat.getByName( $playerName.as_string(), $x, $y );
                        case 19: 
                        {
                            boolean __b;
                            aos.jack.jak.cursor.Cursor __c = null;
                            try {
                                __c = genCursor(1);
                                __b = __c.next();
                            }
                            finally {
                                if (__c != null) 
                                    __c.finished();
                            }
                            if (__b) 
                                __state = 20;
                             else 
                                throw planfailed;
                            break;
                        }
                        //* (61)          bel_playerGold_dat.getByName( $playerName.as_string(), $numGold );
                        case 20: 
                        {
                            boolean __b;
                            aos.jack.jak.cursor.Cursor __c = null;
                            try {
                                __c = genCursor(2);
                                __b = __c.next();
                            }
                            finally {
                                if (__c != null) 
                                    __c.finished();
                            }
                            if (__b) 
                                __state = 21;
                             else 
                                throw planfailed;
                            break;
                        }
                        //* (63)          System.out.println("POS, (" + $x.as_int()+","+ $y.as_int()+")" );
                        case 21: 
                        {
                            __state = 22;
                            java.lang.System.out.println("POS, (" + __local__18_3.as_int() + "," + __local__18_4.as_int() + ")");
                            break;
                        }
                        //* (66)          if (bel_goldAt_dat.check( $x.as_int(), $y.as_int() ))
                        case 22: 
                        {
                            boolean __b;
                            aos.jack.jak.cursor.Cursor __c = null;
                            try {
                                __c = genCursor(3);
                                __b = __c.next();
                            }
                            finally {
                                if (__c != null) 
                                    __c.finished();
                            }
                            if (__b) 
                                __state = 23;
                             else 
                                __state = 25;
                            break;
                        }
                        //* (68)             @send( baseName, meplayeraction_s.send( "pick" ));
                        case 23: 
                        {
                            __breakLevel = 6;
                            __state = 24;
                            agent.send(__local__18_1,meplayeraction_s.send("pick"));
                            break;
                        }
                        //* (69)             continue;
                        case 24: 
                        {
                            __breakLevel = 3;
                            __state = 13;
                            break;
                        }
                        //* (72)          if($numGold.as_int() >= 3)
                        case 25: 
                        {
                            if (__local__18_5.as_int() >= 3) 
                                __state = 26;
                             else 
                                __state = 28;
                            break;
                        }
                        //* (74)             @send( baseName, meplayeraction_s.send( "moveRand" ));
                        case 26: 
                        {
                            __breakLevel = 6;
                            __state = 27;
                            agent.send(__local__18_1,meplayeraction_s.send("moveRand"));
                            break;
                        }
                        //* (75)             continue;  
                        case 27: 
                        {
                            __breakLevel = 3;
                            __state = 13;
                            break;
                        }
                        //* (79)          for (int d=0; d<lookUpDirs.length; ++d)
                        case 28: 
                        {
                            __local__18_7 = 0;
                            __state = 29;
                            break;
                        }
                        //* (79)          for (int d=0; d<lookUpDirs.length; ++d)
                        case 29: 
                        {
                            if (__local__18_7 < lookUpDirs.length) 
                                __state = 30;
                             else 
                                __state = 36;
                            break;
                        }
                        //* (82)             GridPoint lookUpLoc = GridPoint.getFromDir( $x.as_int(), $y.as_int(), lookUpDirs[d] );
                        case 30: 
                        {
                            __breakLevel = 8;
                            __local__18_8 = rmit.ai.clima.gui.grid.GridPoint.getFromDir(__local__18_3.as_int(),__local__18_4.as_int(),lookUpDirs[__local__18_7]);
                            __state = 31;
                            break;
                        }
                        //* (83)             if (bel_goldAt_dat.check( lookUpLoc.x, lookUpLoc.y ))
                        case 31: 
                        {
                            boolean __b;
                            aos.jack.jak.cursor.Cursor __c = null;
                            try {
                                __c = genCursor(4);
                                __b = __c.next();
                            }
                            finally {
                                if (__c != null) 
                                    __c.finished();
                            }
                            if (__b) 
                                __state = 32;
                             else 
                                __state = 35;
                            break;
                        }
                        //* (86)                @send( baseName, meplayeraction_s.send( "moveTo", lookUpDirs[d] ));
                        case 32: 
                        {
                            __breakLevel = 10;
                            __state = 33;
                            agent.send(__local__18_1,meplayeraction_s.send("moveTo",lookUpDirs[__local__18_7]));
                            break;
                        }
                        //* (87)                goldFound = true;
                        case 33: 
                        {
                            __state = 34;
                            __local__18_6 = true;
                            break;
                        }
                        //* (88)                break;
                        case 34: 
                        {
                            __breakLevel = 6;
                            __state = 36;
                            break;
                        }
                        //* (79)          for (int d=0; d<lookUpDirs.length; ++d)
                        case 35: 
                        {
                            __state = 29;
                            ++__local__18_7;
                            break;
                        }
                        //* (92)          if (!goldFound)
                        case 36: 
                        {
                            if (!__local__18_6) 
                                __state = 37;
                             else 
                                __state = 13;
                            break;
                        }
                        //* (94)             @send( baseName, meplayeraction_s.send( "moveRand" ));
                        case 37: 
                        {
                            __breakLevel = 6;
                            __state = 13;
                            agent.send(__local__18_1,meplayeraction_s.send("moveRand"));
                            break;
                        }
                        //* (41) 	#reasoning method
                        case 38: 
                        {
                            if (__pending == null) 
                                __state = PASSED_STATE;
                            __tothrow = __pending;
                            break;
                        }
                    }
                }
                catch (java.lang.Throwable e) {
                    handleException(e,__exMap_body);
                }
            }
             while (!agent.changing_focus);
            return CONTINUE;
        }
        
        public java.lang.String methodName()
        {
            return "body";
        }
        
        __bodyFSM()
        {
        }
        
        public java.lang.String stateInfo()
        {
            int n = __curstate;
            java.lang.String file = __tt__body[0];
            java.lang.String method = __tt__body[1];
            if (n < 0) 
                n = -n;
            n -= (10 - 2);
            java.lang.String line = (n < 2)?"??":__tt__body[n];
            return file + ":" + line + " " + method + " [" + __curstate + "]";
        }
        
        public java.lang.Object genObject(int __index)
        {
            switch (__index) {
            }
            aos.jack.jak.core.Jak.error("illegal Object Construction");
            return null;
        }
        
        public aos.jack.jak.cursor.Cursor genCursor(int __index)
            throws java.lang.Exception
        {
            switch (__index) {
                case 0: 
                {
                    return (bel_players_dat.get(__local__18_0));
                }
                case 1: 
                {
                    return (bel_playerPositions_dat.getByName(__local__18_0.as_string(),__local__18_3,__local__18_4));
                }
                case 2: 
                {
                    return (bel_playerGold_dat.getByName(__local__18_0.as_string(),__local__18_5));
                }
                case 3: 
                {
                    return (bel_goldAt_dat.check(__local__18_3.as_int(),__local__18_4.as_int()));
                }
                case 4: 
                {
                    return (bel_goldAt_dat.check(__local__18_8.x,__local__18_8.y));
                }
            }
            aos.jack.jak.core.Jak.error("illegal Cursor Construction");
            return null;
        }
        
        public aos.jack.jak.fsm.FSM genFSM(int __index)
            throws java.lang.Exception
        {
            switch (__index) {
            }
            aos.jack.jak.core.Jak.error("illegal FSM Construction");
            return null;
        }
        
        public boolean testCondition(int __index)
            throws java.lang.Exception
        {
            switch (__index) {
            }
            aos.jack.jak.core.Jak.error("illegal test Construction");
            return false;
        }
        
        public aos.jack.jak.plan.Plan getPlan()
        {
            return rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions.this;
        }
        
        protected aos.jack.jak.fsm.FSM fail()
        {
            return getPlan().fail();
        }
        
        protected aos.jack.jak.fsm.FSM pass()
        {
            return getPlan().pass();
        }
        
        public void enter()
        {
            __trace = agent.trace("rmit.ai.clima.jackagt.plans.PCoord_ChoosePlayerActions.body");
        }
        
        public java.lang.Object getVariable(int n)
        {
            switch (n) {
                case 0: 
                {
                    return aos.util.ToObject.box(__local__18_0);
                }
                case 1: 
                {
                    return aos.util.ToObject.box(__local__18_1);
                }
                case 2: 
                {
                    return aos.util.ToObject.box(__local__18_2);
                }
                case 3: 
                {
                    return aos.util.ToObject.box(__local__18_3);
                }
                case 4: 
                {
                    return aos.util.ToObject.box(__local__18_4);
                }
                case 5: 
                {
                    return aos.util.ToObject.box(__local__18_5);
                }
                case 6: 
                {
                    return aos.util.ToObject.box(__local__18_6);
                }
                case 7: 
                {
                    return aos.util.ToObject.box(__local__18_7);
                }
                case 8: 
                {
                    return aos.util.ToObject.box(__local__18_8);
                }
                default: 
                {
                    throw new java.lang.IndexOutOfBoundsException("Reasoning Method " + methodName() + " does not have variable number " + n);
                }
            }
        }
        
        public java.lang.String[] variableNames()
        {
            return __fsmVariableNames_body;
        }
        
        public java.lang.String[] variableTypes()
        {
            return __fsmTypes_body;
        }
        
        public java.lang.String[] variableLocalNames()
        {
            return __fsmLocalNames_body;
        }
        
    }
}
